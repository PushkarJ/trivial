require 'rspec'
require_relative '../../models/vulnerability'

RSpec.describe Vulnerability, "#severity" do

  def vuln_data(attrs = {})
    data = {
      severity: "LOW",
      score1: 1.2,
      score2: 9.2,
      vulnerability_id: "CVE-2020-3810",
      description: "some description",
      url: "http://example.org/cve-2020-3810"
    }.merge(attrs)
    {
      "VulnerabilityID" => data[:vulnerability_id],
      "Severity" => data[:severity],
      "Description" => data[:description],
      "PrimaryURL" => data[:url],
      "CVSS" => {
        "nvd" => {
          "V3Score" => data[:score1]
        },
        "redhat" => {
          "V3Score" => data[:score2]
        }
      }
    }
  end

  context "when a vulnerability with severity 'CRITICAL' exists with at least one CVSS V3Score of 10" do
    it "returns catastrophic" do
      vuln = Vulnerability.new("path", "tag", "target", vuln_data(severity: "CRITICAL", score1: 1.0, score2: 10))
      expect(vuln.severity).to eq("catastrophic")
    end
  end


  context "when a vulnerability with severity 'CRITICAL' exists with no CVSS V3Scores == 10.0" do
    it "returns critical" do
      vuln = Vulnerability.new("path", "tag", "target", vuln_data(severity: "CRITICAL", score1: 1.0, score2: 9.9))
      expect(vuln.severity).to eq("critical")
    end
  end

  it "returns downcased Severity" do
    vuln = Vulnerability.new("path", "tag", "target", vuln_data(severity: "FOO"))
    expect(vuln.severity).to eq("foo")
  end

  it "returns image string" do
    vuln = Vulnerability.new("path", "tag", "target", vuln_data())
    expect(vuln.image).to eq("path:tag")
  end

  it "returns target" do
    vuln = Vulnerability.new("path", "tag", "registry.example.org/cool-image:v1.2.3 (debian 10.5)", vuln_data())
    expect(vuln.target).to eq("registry.example.org/cool-image:v1.2.3 (debian 10.5)")
  end

  it "returns (max V3Score) for score" do
    vuln = Vulnerability.new("path", "tag", "score", vuln_data(score1: 9.9, score2: 1.2))
    expect(vuln.score).to eq(9.9)
  end

  it "returns CVE ID" do
    vuln = Vulnerability.new("path", "tag", "score", vuln_data(vulnerability_id: "123"))
    expect(vuln.vulnerability_id).to eq("123")
  end

  it "returns description" do
    vuln = Vulnerability.new("path", "tag", "score", vuln_data(description: "some desc"))
    expect(vuln.description).to eq("some desc")
  end

  it "returns url" do
    vuln = Vulnerability.new("path", "tag", "score", vuln_data(url: "some-url"))
    expect(vuln.url).to eq("some-url")
  end
end
